/*
 * Copyright 2022 Celonis SE
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.celonis.kafka.connect.ems.config
import com.celonis.kafka.connect.ems.config.EmsSinkConfigConstants.{AUTHORIZATION_DOC, AUTHORIZATION_KEY, CLOSE_EVERY_CONNECTION_DEFAULT_VALUE, CLOSE_EVERY_CONNECTION_DOC, CLOSE_EVERY_CONNECTION_KEY, COMMIT_INTERVAL_DOC, COMMIT_INTERVAL_KEY, COMMIT_RECORDS_DOC, COMMIT_RECORDS_KEY, COMMIT_SIZE_DOC, COMMIT_SIZE_KEY, CONNECTION_ID_DEFAULT, CONNECTION_ID_DOC, CONNECTION_ID_KEY, CONNECTION_POOL_KEEPALIVE_MILLIS_DEFAULT_VALUE, CONNECTION_POOL_KEEPALIVE_MILLIS_DOC, CONNECTION_POOL_KEEPALIVE_MILLIS_KEY, CONNECTION_POOL_MAX_IDLE_CONNECTIONS_DOC, CONNECTION_POOL_MAX_IDLE_CONNECTIONS_KEY, DEBUG_KEEP_TMP_FILES_DEFAULT, DEBUG_KEEP_TMP_FILES_DOC, DEBUG_KEEP_TMP_FILES_KEY, ENDPOINT_DOC, ENDPOINT_KEY, ERROR_POLICY_DEFAULT, ERROR_POLICY_DOC, ERROR_POLICY_KEY, ERROR_RETRY_INTERVAL, ERROR_RETRY_INTERVAL_DEFAULT, ERROR_RETRY_INTERVAL_DOC, EXPLODE_MODE_DOC, EXPLODE_MODE_KEY, FALLBACK_VARCHAR_LENGTH_DEFAULT, FALLBACK_VARCHAR_LENGTH_DOC, FALLBACK_VARCHAR_LENGTH_KEY, FLATTENER_DISCARD_COLLECTIONS_DEFAULT, FLATTENER_DISCARD_COLLECTIONS_DOC, FLATTENER_DISCARD_COLLECTIONS_KEY, FLATTENER_ENABLE_DEFAULT, FLATTENER_ENABLE_DOC, FLATTENER_ENABLE_KEY, FLATTENER_JSONBLOB_CHUNKS_DEFAULT, FLATTENER_JSONBLOB_CHUNKS_DOC, FLATTENER_JSONBLOB_CHUNKS_KEY, NBR_OF_RETIRES_DEFAULT, NBR_OF_RETRIES_DOC, NBR_OF_RETRIES_KEY, OBFUSCATED_FIELDS_DOC, OBFUSCATED_FIELDS_KEY, OBFUSCATION_TYPE_DOC, OBFUSCATION_TYPE_KEY, ORDER_FIELD_NAME_DOC, ORDER_FIELD_NAME_KEY, PARQUET_FLUSH_DEFAULT, PARQUET_FLUSH_DOC, PARQUET_FLUSH_KEY, PRIMARY_KEYS_DEFAULT, PRIMARY_KEYS_DOC, PRIMARY_KEYS_KEY, PROXY_AUTHBASIC_PASSWORD_DOC, PROXY_AUTHBASIC_PASSWORD_KEY, PROXY_AUTHBASIC_USERNAME_DOC, PROXY_AUTHBASIC_USERNAME_KEY, PROXY_AUTHENTICATION_DOC, PROXY_AUTHENTICATION_KEY, PROXY_HOST_DOC, PROXY_HOST_KEY, PROXY_PORT_DOC, PROXY_PORT_KEY, PROXY_TYPE_DOC, PROXY_TYPE_KEY, SHA512_RANDOM_SALT_DOC, SHA512_RANDOM_SALT_KEY, SHA512_SALT_DOC, SHA512_SALT_KEY, TARGET_TABLE_DOC, TARGET_TABLE_KEY, TMP_DIRECTORY_DOC, TMP_DIRECTORY_KEY}
import com.typesafe.scalalogging.LazyLogging
import org.apache.kafka.common.config.ConfigDef
import org.apache.kafka.common.config.ConfigDef.Importance
import org.apache.kafka.common.config.ConfigDef.Type

object EmsSinkConfigDef {
  val config: ConfigDef = new EmsSinkConfigDef()
    .define(
      ENDPOINT_KEY,
      Type.STRING,
      Importance.HIGH,
      ENDPOINT_DOC,
      "Connection",
      1,
      ConfigDef.Width.LONG,
      "Endpoint",
    )
    .define(
      AUTHORIZATION_KEY,
      Type.PASSWORD,
      Importance.HIGH,
      AUTHORIZATION_DOC,
      "Connection",
      2,
      ConfigDef.Width.MEDIUM,
      "Authorization Key",
    )
    .define(
      TARGET_TABLE_KEY,
      Type.STRING,
      Importance.HIGH,
      TARGET_TABLE_DOC,
      "Connection",
      3,
      ConfigDef.Width.MEDIUM,
      "Table",
    )
    .define(
      CONNECTION_ID_KEY,
      Type.STRING,
      CONNECTION_ID_DEFAULT,
      Importance.HIGH,
      CONNECTION_ID_DOC,
      "Connection",
      4,
      ConfigDef.Width.MEDIUM,
      "Connection Id",
    )
    .define(
      COMMIT_SIZE_KEY,
      Type.LONG,
      Importance.HIGH,
      COMMIT_SIZE_DOC,
      "Commit",
      1,
      ConfigDef.Width.MEDIUM,
      "File Size",
    )
    .define(
      COMMIT_RECORDS_KEY,
      Type.INT,
      Importance.HIGH,
      COMMIT_RECORDS_DOC,
      "Commit",
      2,
      ConfigDef.Width.MEDIUM,
      "Max records",
    )
    .define(
      COMMIT_INTERVAL_KEY,
      Type.LONG,
      Importance.HIGH,
      COMMIT_INTERVAL_DOC,
      "Commit",
      3,
      ConfigDef.Width.MEDIUM,
      "Time window",
    )
    .define(
      TMP_DIRECTORY_KEY,
      Type.STRING,
      Importance.LOW,
      TMP_DIRECTORY_DOC,
    )
    .define(
      PRIMARY_KEYS_KEY,
      Type.STRING,
      PRIMARY_KEYS_DEFAULT,
      Importance.LOW,
      PRIMARY_KEYS_DOC,
      "Data",
      1,
      ConfigDef.Width.MEDIUM,
      "Primary Keys",
    )
    .define(
      FALLBACK_VARCHAR_LENGTH_KEY,
      Type.INT,
      FALLBACK_VARCHAR_LENGTH_DEFAULT,
      Importance.LOW,
      FALLBACK_VARCHAR_LENGTH_DOC,
      "Data",
      2,
      ConfigDef.Width.MEDIUM,
      "String(VARCHAR) type size",
    )
    .define(
      ERROR_POLICY_KEY,
      Type.STRING,
      ERROR_POLICY_DEFAULT,
      Importance.HIGH,
      ERROR_POLICY_DOC,
      "Error",
      1,
      ConfigDef.Width.LONG,
      ERROR_POLICY_DOC,
    )
    .define(
      NBR_OF_RETRIES_KEY,
      Type.INT,
      NBR_OF_RETIRES_DEFAULT,
      Importance.MEDIUM,
      NBR_OF_RETRIES_DOC,
      "Error",
      2,
      ConfigDef.Width.LONG,
      NBR_OF_RETRIES_KEY,
    )
    .define(
      ERROR_RETRY_INTERVAL,
      Type.LONG,
      ERROR_RETRY_INTERVAL_DEFAULT,
      Importance.MEDIUM,
      ERROR_RETRY_INTERVAL_DOC,
      "Error",
      3,
      ConfigDef.Width.LONG,
      ERROR_RETRY_INTERVAL,
    )
    .define(
      PARQUET_FLUSH_KEY,
      Type.INT,
      PARQUET_FLUSH_DEFAULT,
      Importance.MEDIUM,
      PARQUET_FLUSH_DOC,
      "Parquet",
      1,
      ConfigDef.Width.LONG,
      PARQUET_FLUSH_KEY,
    )
    .define(
      DEBUG_KEEP_TMP_FILES_KEY,
      Type.BOOLEAN,
      DEBUG_KEEP_TMP_FILES_DEFAULT,
      Importance.LOW,
      DEBUG_KEEP_TMP_FILES_DOC,
      "Parquet",
      2,
      ConfigDef.Width.SHORT,
      DEBUG_KEEP_TMP_FILES_KEY,
    )
    .define(
      OBFUSCATED_FIELDS_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      OBFUSCATED_FIELDS_DOC,
      "Obfuscation",
      1,
      ConfigDef.Width.LONG,
      OBFUSCATED_FIELDS_DOC,
    )
    .define(
      OBFUSCATION_TYPE_KEY,
      Type.STRING,
      "FIX",
      Importance.LOW,
      OBFUSCATION_TYPE_DOC,
      "Obfuscation",
      2,
      ConfigDef.Width.SHORT,
      OBFUSCATION_TYPE_KEY,
    )
    .define(
      SHA512_SALT_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      SHA512_SALT_DOC,
      "Obfuscation",
      3,
      ConfigDef.Width.MEDIUM,
      SHA512_SALT_DOC,
    )
    .define(
      SHA512_RANDOM_SALT_KEY,
      Type.BOOLEAN,
      null,
      Importance.LOW,
      SHA512_RANDOM_SALT_DOC,
      "Obfuscation",
      4,
      ConfigDef.Width.MEDIUM,
      SHA512_RANDOM_SALT_DOC,
    )
    .define(
      PROXY_HOST_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      PROXY_HOST_DOC,
      "Proxy",
      1,
      ConfigDef.Width.MEDIUM,
      PROXY_HOST_DOC,
    )
    .define(
      PROXY_PORT_KEY,
      Type.INT,
      null,
      Importance.LOW,
      PROXY_PORT_DOC,
      "Proxy",
      2,
      ConfigDef.Width.MEDIUM,
      PROXY_PORT_DOC,
    )
    .define(
      PROXY_TYPE_KEY,
      Type.STRING,
      "HTTP",
      Importance.LOW,
      PROXY_TYPE_DOC,
      "Proxy",
      3,
      ConfigDef.Width.MEDIUM,
      PROXY_TYPE_DOC,
    )
    .define(
      PROXY_AUTHENTICATION_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      PROXY_AUTHENTICATION_DOC,
      "Proxy",
      4,
      ConfigDef.Width.MEDIUM,
      PROXY_AUTHENTICATION_DOC,
    )
    .define(
      PROXY_AUTHBASIC_USERNAME_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      PROXY_AUTHBASIC_USERNAME_DOC,
      "Proxy",
      5,
      ConfigDef.Width.MEDIUM,
      PROXY_AUTHBASIC_USERNAME_DOC,
    )
    .define(
      PROXY_AUTHBASIC_PASSWORD_KEY,
      Type.PASSWORD,
      null,
      Importance.LOW,
      PROXY_AUTHBASIC_PASSWORD_DOC,
      "Proxy",
      6,
      ConfigDef.Width.MEDIUM,
      PROXY_AUTHBASIC_PASSWORD_DOC,
    )
    .define(
      EXPLODE_MODE_KEY,
      Type.STRING,
      "None",
      Importance.LOW,
      EXPLODE_MODE_DOC,
      "Explode",
      1,
      ConfigDef.Width.MEDIUM,
      EXPLODE_MODE_DOC,
    )
    .define(
      ORDER_FIELD_NAME_KEY,
      Type.STRING,
      null,
      Importance.LOW,
      EXPLODE_MODE_DOC,
      "Data",
      3,
      ConfigDef.Width.MEDIUM,
      ORDER_FIELD_NAME_DOC,
    )
    .define(
      CONNECTION_POOL_MAX_IDLE_CONNECTIONS_KEY,
      Type.INT,
      5,
      Importance.LOW,
      CONNECTION_POOL_MAX_IDLE_CONNECTIONS_DOC,
      "Pool",
      1,
      ConfigDef.Width.MEDIUM,
      CONNECTION_POOL_MAX_IDLE_CONNECTIONS_DOC,
    )
    .define(
      CONNECTION_POOL_KEEPALIVE_MILLIS_KEY,
      Type.LONG,
      CONNECTION_POOL_KEEPALIVE_MILLIS_DEFAULT_VALUE,
      Importance.LOW,
      CONNECTION_POOL_KEEPALIVE_MILLIS_DOC,
      "Pool",
      2,
      ConfigDef.Width.LONG,
      CONNECTION_POOL_KEEPALIVE_MILLIS_DOC,
    )
    .define(
      CLOSE_EVERY_CONNECTION_KEY,
      Type.BOOLEAN,
      CLOSE_EVERY_CONNECTION_DEFAULT_VALUE,
      Importance.LOW,
      CLOSE_EVERY_CONNECTION_DOC,
      "Pool",
      3,
      ConfigDef.Width.MEDIUM,
      CLOSE_EVERY_CONNECTION_DOC,
    )
    .define(
      "",
      Type.BOOLEAN,
      CLOSE_EVERY_CONNECTION_DEFAULT_VALUE,
      Importance.LOW,
      CLOSE_EVERY_CONNECTION_DOC,
      "Flattener",
      3,
      ConfigDef.Width.MEDIUM,
      CLOSE_EVERY_CONNECTION_DOC,
    )
    .define(
      FLATTENER_ENABLE_KEY,
      Type.BOOLEAN,
      FLATTENER_ENABLE_DEFAULT,
      Importance.MEDIUM,
      FLATTENER_ENABLE_DOC,
    )
    .define(
      FLATTENER_DISCARD_COLLECTIONS_KEY,
      Type.BOOLEAN,
      FLATTENER_DISCARD_COLLECTIONS_DEFAULT,
      Importance.MEDIUM,
      FLATTENER_DISCARD_COLLECTIONS_DOC,
    )
    .define(
      FLATTENER_JSONBLOB_CHUNKS_KEY,
      Type.INT,
      FLATTENER_JSONBLOB_CHUNKS_DEFAULT,
      Importance.MEDIUM,
      FLATTENER_JSONBLOB_CHUNKS_DOC,
    )
}

class EmsSinkConfigDef() extends ConfigDef with LazyLogging
